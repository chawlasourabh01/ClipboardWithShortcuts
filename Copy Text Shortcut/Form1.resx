<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAMMOAADDDgAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAARAAAAI8AAACaAAAAmwAAAJgAAACZAAAAmwAAAJkAAACYAAAAmwAA
        AJoAAACYAAAAmgAAAJoAAACYAAAAmgAAAJcAAABLAAAAAAAAACcAAACIAAAAnAAAAJkAAACYAAAAmwAA
        AJkAAACYAAAAmwAAAJoAAACYAAAAkQAAAEQAAADkAAAA9wAAAJoAAACYAAAA8wAAAK8AAACIAAAA6gAA
        AMYAAACAAAAA2QAAANsAAACBAAAAwwAAAOsAAACKAAAAjgAAAM0AAAAmAAAAoQAAALwAAACNAAAA7gAA
        AL4AAACCAAAA3wAAANQAAACAAAAAywAAAOQAAACoAAAA2gAAAO0AAAC8AAAAtAAAACQAAAB1AAAAyQAA
        ADgAAABTAAAA0AAAAFUAAAA2AAAAyAAAAHcAAAAkAAAAtAAAAJgAAAAnAAAAxgAAAD8AAAC+AAAA0QAA
        AC8AAABeAAAAzwAAAEoAAAA/AAAAzAAAAGsAAAApAAAAugAAALUAAADsAAAA5AAAADcAAACUAAAAtgAA
        ACUAAAB0AAAAyQAAADgAAABSAAAAzwAAAFUAAAA2AAAAyAAAAHcAAAAjAAAAsgAAALAAAADSAAAAPwAA
        ALcAAADGAAAAwAAAADAAAABdAAAAzwAAAEsAAAA+AAAAzAAAAGwAAAAoAAAAwAAAAP8AAADuAAAAdgAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHwAAACvAAAADgAAAAAAAAAXAAAAyAAAAFAAAAC9AAAAUAAA
        AAAAAAAAAAAAcQAAALcAAAAPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAxQAAAEoAAAAJAAAAFwAAAC0AAADLAAAAPwAA
        ALgAAABhAAAAFAAAABEAAAAYAAAAxAAAAEsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoAAADGAAAALwAAAKoAAADKAAAAywAA
        ANUAAAAzAAAAqQAAANYAAADHAAAAxgAAAEIAAACVAAAAgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAATgAAALoAAABAAAAA0AAA
        AFEAAAA+AAAAMwAAAAYAAAAjAAAAPwAAAD4AAACzAAAAdwAAAHwAAACWAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABEAAAAwQAA
        ADUAAADOAAAAwAAAALoAAACrAAAAJAAAAIIAAAC9AAAAuQAAANsAAABcAAAAiQAAAIwAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACMAAADMAAAANgAAAC4AAABOAAAAXwAAANMAAAA/AAAAuQAAAIgAAABNAAAAQQAAABYAAAC2AAAAYQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAABAAAAKEAAACNAAAAAgAAAAAAAAAXAAAAxwAAAEAAAAC4AAAAUAAAAAAAAAAAAAAASgAA
        AMwAAAAiAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAANwAAANIAAABXAAAAAAAAABEAAADEAAAAtwAAANoAAABDAAAAAAAA
        ACYAAADGAAAAdQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXQAAANQAAAB0AAAAFwAAAD8AAAB3AAAAWwAA
        ABUAAABKAAAAxgAAAJYAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAASQAAAL4AAADIAAAAlwAA
        AH0AAACKAAAAuAAAAM4AAAB1AAAADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAA
        AE0AAACEAAAAmAAAAI4AAABiAAAAIgAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////8AACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAIgwGHAAE
        BgwAAAYMAAAGTAAABgwAAAYMIHwCHD0AAMQAAAAAAAAEAP/xBj//4AA//+AAP//gAD//4AA//+AAP//h
        Bj//8QR///gAf//4AP///gH///////////8=
</value>
  </data>
</root>